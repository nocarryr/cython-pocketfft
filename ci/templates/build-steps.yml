parameters:
  python.version: ''
  use_cython: 'false'
  build_sdist: 'false'
  build_wheel: 'false'
  test_mode: ''
  project_name: 'cython-pocketfft'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: python -m pip install -U pip setuptools wheel && pip install -r requirements.txt
  displayName: 'Install dependencies'

- ${{ if or(eq(parameters.build_wheel, 'true'), eq(parameters.build_sdist, 'true')) }}:
  - script: python setup.py build_ext --inplace --use-cython
    displayName: 'Build Extenstions'

  - ${{ if eq(parameters.build_wheel, 'true') }}:
    - script: python setup.py bdist_wheel
      displayName: 'Build wheel'

  - ${{ if eq(parameters.build_sdist, 'true') }}:
    - script: python setup.py sdist
      displayName: 'Build sdist'

  - publish: $(System.DefaultWorkingDirectory)/dist
    artifact: dist

- ${{ if eq(parameters.use_cython, 'false') }}:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: dist
      targetPath: $(System.DefaultWorkingDirectory)/dist

- ${{ if eq(parameters.test_mode, 'develop') }}:
  - script: pip install -e .
    displayName: 'Install develop mode'

- ${{ if eq(parameters.test_mode, 'wheel') }}:
  - script: pip install --only-binary $(project_name) --no-index --find-links dist/ $(project_name)
    displayName: 'Install wheel'

- ${{ if eq(parameters.test_mode, 'sdist') }}:
  - script: pip install --no-binary $(project_name) --no-index --find-links dist/ $(project_name)
    displayName: 'Install sdist'

- script: python build_tests.py
  displayName: 'Build Tests'

- script: py.test
  displayName: 'Run Tests'
